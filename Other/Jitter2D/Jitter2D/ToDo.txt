TODO
======
 
 - Add Collision Filtering!
 - Cleanup/Refactor discrete collision system, should be a single file for discrete, 
	continuous and shape switch should not be in CollisionSystem!
 - Add Circle vs Circle case.
 - Add Circle vs Box case.
 - Add ConvexHull vs ConvexHull case.
 - Add Circle vs ConvexHull case.
 - Add hybrid capsule shape.
 - Fix all shapes mass/inertia calculations
 - Add a better CollisionSystem
	DynamicTree
	SpacialHash
 - MPR needs more testing...(Doesn't work with long thin shapes)
 - Add Joint's...Pin, Slide, Pivot, Groove, Spring, Angular Spring, Angular Limit,
		Ratchet, Gear, Motor, Friction, Pulley, Rope, Weld, Wheel...
		DONE - spring
 DONE - Change JMatrix to be a 2x2 for even greater performance.
 - Test JMatrix (Invert especially)
 - Only transform Axes if shapes are in a collision pair!
 - Only transform Axes of shape once even if in multiple collisions!
 - Implement PointInside test for all shapes!
 - Hill climb method and caching for polygon shapes!

 Future
 ======

 - Add Box2D Block Solver for even more stability!
 - Add SoftBody back in!


 NOTES
 ======

- Box Vs Box Special Case is very good! Nearly 20x the performance of the current general case. Still more optimization can be 
	done.

- Currently shapes may update their axes multiple times per step. Shapes need to be marked when updated. This will help
	boost performance once convex hulls are added back in!
 
 - Hill climb method and caching for polygon shapes will require each shape to maintain a hash of id's and last found vertex to be used for starting vertex in the hill climb
 